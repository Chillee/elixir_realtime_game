{"version":3,"sources":["node_modules/phoenix/priv/static/phoenix.js","web/static/js/app.js"],"names":["Object","defineProperty","exports","value","phoenix_1","require","Constants","PLAYER_W","PLAYER_H","W","H","LEVEL_W","LEVEL_H","Camera","user","targetX","x","targetY","y","cx","cy","Math","floor","PlayerState","id","left","right","top","x_dir","dx","dy","can_jump","tick","frame","Block","w","h","bottom","PlayerBlock","Spike","Level","collidables","push","gs","Array","levelImage","Image","src","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","data","getImageData","r","g","b","addBlock","spawnX","spawnY","userState","addSpike","GameState","user_id","fps","playerStates","filter","Game","deathAnimFrame","random","getElementById","spriteSheet","state","level","create","a","roomChan","collisions","players","obj","checkCollision","killPlayer","draw","fillStyle","fillRect","translate","scale","setTransform","nonUserStates","player","Key","_pressed","LEFT","UP","RIGHT","DOWN","isDown","keyCode","onKeydown","event","onKeyup","window","addEventListener","check_bounds","update","jump_v","v","abs","setInterval","App","socket","Socket","connect","channel","join","receive","console","log","onError","e","init","game","c","sheet","run","on","msg","changedPlayer","length","player_idx","findIndex","splice","default"],"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","file":"priv/static/js/app.js","sourcesContent":["\nrequire.register(\"phoenix/priv/static/phoenix.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix\");\n  (function() {\n    (function(exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are multiplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"room:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n// ## Duplicate Join Subscriptions\n//\n// While the client may join any number of topics on any number of channels,\n// the client may only hold a single subscription for each unique topic at any\n// given time. When attempting to create a duplicate subscription,\n// the server will close the existing channel, log a warning, and\n// spawn a new channel for the topic. The client will have their\n// `channel.onClose` callbacks fired for the existing channel, and the new\n// channel join will have its receive hooks processed as normal.\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attempted\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n//\n// ## Presence\n//\n// The `Presence` object provides features for syncing presence information\n// from the server with the client and handling presences joining and leaving.\n//\n// ### Syncing initial state from the server\n//\n// `Presence.syncState` is used to sync the list of presences on the server\n// with the client's state. An optional `onJoin` and `onLeave` callback can\n// be provided to react to changes in the client's local presences across\n// disconnects and reconnects with the server.\n//\n// `Presence.syncDiff` is used to sync a diff of presence join and leave\n// events from the server, as they happen. Like `syncState`, `syncDiff`\n// accepts optional `onJoin` and `onLeave` callbacks to react to a user\n// joining or leaving from a device.\n//\n// ### Listing Presences\n//\n// `Presence.list` is used to return a list of presence information\n// based on the local state of metadata. By default, all presence\n// metadata is returned, but a `listBy` function can be supplied to\n// allow the client to select which metadata to use for a given presence.\n// For example, you may have a user online from different devices with a\n// a metadata status of \"online\", but they have set themselves to \"away\"\n// on another device. In this case, they app may choose to use the \"away\"\n// status for what appears on the UI. The example below defines a `listBy`\n// function which prioritizes the first metadata which was registered for\n// each user. This could be the first tab they opened, or the first device\n// they came online from:\n//\n//     let state = {}\n//     state = Presence.syncState(state, stateFromServer)\n//     let listBy = (id, {metas: [first, ...rest]}) => {\n//       first.count = rest.length + 1 // count of this user's presences\n//       first.id = id\n//       return first\n//     }\n//     let onlineUsers = Presence.list(state, listBy)\n//\n//\n// ### Example Usage\n//\n//     // detect if user has joined for the 1st time or from another tab/device\n//     let onJoin = (id, current, newPres) => {\n//       if(!current){\n//         console.log(\"user has entered for the first time\", newPres)\n//       } else {\n//         console.log(\"user additional presence\", newPres)\n//       }\n//     }\n//     // detect if user has left from all tabs/devices, or is still present\n//     let onLeave = (id, current, leftPres) => {\n//       if(current.metas.length === 0){\n//         console.log(\"user has left from all devices\", leftPres)\n//       } else {\n//         console.log(\"user left from a device\", leftPres)\n//       }\n//     }\n//     let presences = {} // client's initial empty presence state\n//     // receive initial presence data from server, sent after join\n//     myChannel.on(\"presences\", state => {\n//       presences = Presence.syncState(presences, state, onJoin, onLeave)\n//       displayUsers(Presence.list(presences))\n//     })\n//     // receive \"presence_diff\" from server, containing join/leave events\n//     myChannel.on(\"presence_diff\", diff => {\n//       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n//       this.setState({users: Presence.list(room.presences, listBy)})\n//     })\n//\nvar VSN = \"1.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\nvar Push = function () {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status;\n      var response = _ref.response;\n      var ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n    //\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\", _this3.joinRef());\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n    // before dispatching to the channel callbacks.\n    //\n    // Must return the payload, modified or unmodified\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref) {\n      var close = CHANNEL_EVENTS.close;\n      var error = CHANNEL_EVENTS.error;\n      var leave = CHANNEL_EVENTS.leave;\n      var join = CHANNEL_EVENTS.join;\n\n      if (ref && [close, error, leave, join].indexOf(event) >= 0 && ref !== this.joinRef()) {\n        return;\n      }\n      var handledPayload = this.onMessage(event, payload, ref);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Socket = exports.Socket = function () {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n\n  function Socket(endPoint) {\n    var _this4 = this;\n\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this5 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this6 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this7 = this;\n\n      var topic = data.topic;\n      var event = data.event;\n      var payload = data.payload;\n      var ref = data.ref;\n\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef() });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic;\n      var event = msg.event;\n      var payload = msg.payload;\n      var ref = msg.ref;\n\n      this.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this8 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status;\n          var token = resp.token;\n          var messages = resp.messages;\n\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({ data: JSON.stringify(msg) });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this9 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      return resp && resp !== \"\" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this12 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        (function () {\n          var newRefs = newPresence.metas.map(function (m) {\n            return m.phx_ref;\n          });\n          var curRefs = currentPresence.metas.map(function (m) {\n            return m.phx_ref;\n          });\n          var joinedMetas = newPresence.metas.filter(function (m) {\n            return curRefs.indexOf(m.phx_ref) < 0;\n          });\n          var leftMetas = currentPresence.metas.filter(function (m) {\n            return newRefs.indexOf(m.phx_ref) < 0;\n          });\n          if (joinedMetas.length > 0) {\n            joins[key] = newPresence;\n            joins[key].metas = joinedMetas;\n          }\n          if (leftMetas.length > 0) {\n            leaves[key] = _this12.clone(currentPresence);\n            leaves[key].metas = leftMetas;\n          }\n        })();\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins;\n    var leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this13 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this13.tries = _this13.tries + 1;\n        _this13.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n})(typeof(exports) === \"undefined\" ? window.Phoenix = window.Phoenix || {} : exports);\n  })();\n});","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst phoenix_1 = require(\"phoenix\");\nclass Constants {\n}\nConstants.PLAYER_W = 32;\nConstants.PLAYER_H = 32;\nConstants.W = 640;\nConstants.H = 640;\nConstants.LEVEL_W = 0;\nConstants.LEVEL_H = 0;\nclass Camera {\n    static update(user) {\n        this.targetX = user.x + Constants.PLAYER_W / 2 - Constants.W / 2;\n        this.targetY = user.y + Constants.PLAYER_H / 2 - Constants.H / 2;\n        this.cx += (this.targetX - this.cx) * 0.1;\n        this.cy += (this.targetY - this.cy) * 0.1;\n        if (this.cx > Constants.LEVEL_W - Constants.W)\n            this.cx = Constants.LEVEL_W - Constants.W;\n        if (this.cx < 0)\n            this.cx = 0;\n        if (this.cy > Constants.LEVEL_H - Constants.H)\n            this.cy = Constants.LEVEL_H - Constants.H;\n        if (this.cy < 0)\n            this.cy = 0;\n    }\n    static get x() {\n        return Math.floor(this.cx);\n    }\n    static get y() {\n        return Math.floor(this.cy);\n    }\n}\nCamera.cx = 0;\nCamera.cy = 0;\nCamera.targetX = 0;\nCamera.targetY = 0;\nclass PlayerState {\n    constructor(x, y, id) {\n        this.x = 0;\n        this.y = 0;\n        this.left = 3;\n        this.right = 3;\n        this.top = 6;\n        this.x_dir = 1;\n        this.id = 0;\n        this.dx = 0;\n        this.dy = 0;\n        this.can_jump = false;\n        this.tick = 0;\n        this.frame = 0;\n        this.x = x;\n        this.y = y;\n        this.id = id;\n    }\n}\nclass Block {\n    constructor(x, y) {\n        this.x = 0;\n        this.y = 0;\n        this.w = Constants.PLAYER_W;\n        this.h = Constants.PLAYER_H;\n        this.left = 0;\n        this.right = 0;\n        this.top = 0;\n        this.bottom = 0;\n        this.x = x;\n        this.y = y;\n    }\n}\nclass PlayerBlock {\n    constructor(x, y) {\n        this.x = 0;\n        this.y = 0;\n        this.w = Constants.PLAYER_W;\n        this.h = Constants.PLAYER_H;\n        this.left = 0;\n        this.right = 0;\n        this.top = 0;\n        this.bottom = 0;\n        this.x = x;\n        this.y = y;\n    }\n}\nclass Spike {\n    constructor(x, y) {\n        this.x = 0;\n        this.y = 0;\n        this.w = Constants.PLAYER_W;\n        this.h = Constants.PLAYER_H;\n        this.left = 0;\n        this.right = 0;\n        this.top = Constants.PLAYER_H / 2;\n        this.bottom = 0;\n        this.x = x;\n        this.y = y;\n    }\n}\nclass Level {\n    addDeadPlayer(x, y) {\n        // todo\n    }\n    addBlock(x, y) {\n        this.collidables.push(new Block(x, y));\n    }\n    addSpike(x, y) {\n        this.collidables.push(new Spike(x, y));\n    }\n    create(gs) {\n        this.collidables = new Array();\n        let levelImage = new Image();\n        levelImage.src = \"images/level.png\";\n        levelImage.onload = () => {\n            let canvas = document.createElement(\"canvas\");\n            canvas.width = levelImage.width;\n            canvas.height = levelImage.height;\n            let ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(levelImage, 0, 0, levelImage.width, levelImage.height);\n            let data = ctx.getImageData(0, 0, levelImage.width, levelImage.height).data;\n            Constants.LEVEL_W = levelImage.width * 32;\n            Constants.LEVEL_H = levelImage.height * 32;\n            for (let y = 0; y < levelImage.height; y++) {\n                for (let x = 0; x < levelImage.width; x++) {\n                    let r = data[(x + y * levelImage.width) * 4];\n                    let g = data[(x + y * levelImage.width) * 4 + 1];\n                    let b = data[(x + y * levelImage.width) * 4 + 2];\n                    if (r === 0 && g === 0 && b === 0) {\n                        this.addBlock(x * 32, y * 32);\n                    }\n                    if (r === 0 && g === 255 && b === 0) {\n                        this.spawnX = x * 32;\n                        this.spawnY = y * 32;\n                        gs.userState.x = x * 32;\n                        gs.userState.y = y * 32;\n                    }\n                    if (r === 255 && g === 0 && b === 0) {\n                        this.addSpike(x * 32, y * 32);\n                    }\n                }\n            }\n        };\n    }\n}\nclass GameState {\n    constructor(user_id) {\n        this.fps = 60;\n        this.user_id = user_id;\n        this.playerStates = new Array(new PlayerState(0, 0, user_id));\n    }\n    get userState() {\n        return this.playerStates.filter(x => x.id === this.user_id)[0];\n    }\n    get nonUserStates() {\n        return this.playerStates.filter(x => x.id !== this.user_id);\n    }\n}\nclass Game {\n    constructor() {\n        this.deathAnimFrame = 0;\n        this.user_id = Math.floor(Math.random() * 10000);\n        this.canvas = document.getElementById(\"gameCanvas\");\n        this.spriteSheet = new Image();\n        this.spriteSheet.src = \"images/sheet.png\";\n        this.state = new GameState(this.user_id);\n        this.level = new Level();\n        this.level.create(this.state);\n    }\n    checkCollision(a, b) {\n        if (a.x >= b.x + b.w - a.left - b.right || a.x + Constants.PLAYER_W - a.right - b.left <= b.x)\n            return false;\n        if (a.y >= b.y + b.h - a.top - b.bottom || a.y + Constants.PLAYER_H - b.top <= b.y)\n            return false;\n        return true;\n    }\n    killPlayer() {\n        this.deathAnimFrame = 10;\n        this.state.userState.x = this.level.spawnX;\n        this.state.userState.y = this.level.spawnY;\n        this.state.userState.dx = 0;\n        this.state.userState.dy = 0;\n    }\n    run(roomChan) {\n        const collisions = () => {\n            const gs = this.state;\n            let players = gs.playerStates;\n            let user = gs.userState;\n            user.can_jump = false;\n            user.y += user.dy;\n            for (const obj of this.level.collidables) {\n                if (this.checkCollision(user, obj)) {\n                    if (obj instanceof PlayerBlock) {\n                        user.y -= user.dy;\n                        if (!this.checkCollision(user, obj)) {\n                            user.y += user.dy;\n                            if (user.dy > 0) {\n                                user.dy = 0;\n                                user.can_jump = true;\n                                user.y = obj.y - Constants.PLAYER_H + obj.top;\n                            }\n                        }\n                        else {\n                            user.y += user.dy;\n                        }\n                    }\n                    else {\n                        if (user.dy > 0) {\n                            user.dy = 0;\n                            user.can_jump = true;\n                            user.y = obj.y - Constants.PLAYER_H + obj.top;\n                        }\n                        else {\n                            user.dy = 0;\n                            user.y = obj.y + obj.h - user.top - obj.bottom;\n                        }\n                        if (obj instanceof Spike) {\n                            this.killPlayer();\n                        }\n                    }\n                }\n            }\n            user.x += user.dx;\n            for (const obj of this.level.collidables) {\n                if (this.checkCollision(user, obj) && !(obj instanceof PlayerBlock)) {\n                    if (user.dx > 0) {\n                        user.x = obj.x - Constants.PLAYER_W + user.right + obj.left;\n                    }\n                    else {\n                        user.x = obj.x + obj.w - user.left - obj.right;\n                    }\n                }\n            }\n        };\n        const draw = () => {\n            const ctx = this.canvas.getContext(\"2d\");\n            const gs = this.state;\n            ctx.fillStyle = 'rgb(255, 255, 255)';\n            ctx.fillRect(0, 0, Constants.W, Constants.H);\n            ctx.fillStyle = 'rgb(0, 0, 0)';\n            const user = this.state.userState;\n            for (const obj of this.level.collidables) {\n                if (obj instanceof PlayerBlock)\n                    ctx.fillRect(obj.x - Camera.x, obj.y - Camera.y, obj.w, obj.h);\n                if (obj instanceof Block)\n                    ctx.fillRect(obj.x - Camera.x, obj.y - Camera.y, obj.w, obj.h);\n                if (obj instanceof Spike)\n                    ctx.drawImage(this.spriteSheet, Constants.PLAYER_W * 4, 0, Constants.PLAYER_W, Constants.PLAYER_H, obj.x - Camera.x, obj.y - Camera.y, Constants.PLAYER_W, Constants.PLAYER_H);\n            }\n            if (user.x_dir === -1) {\n                ctx.translate(user.x + Constants.PLAYER_W - Camera.x, user.y - Camera.y);\n                ctx.scale(-1, 1);\n                if (user.dx != 0) {\n                    user.frame = Math.floor(user.tick / 5) % 4;\n                    ctx.drawImage(this.spriteSheet, user.frame * Constants.PLAYER_W, Constants.PLAYER_H, Constants.PLAYER_W, Constants.PLAYER_H, 0, 0, Constants.PLAYER_W, Constants.PLAYER_H);\n                }\n                else {\n                    ctx.drawImage(this.spriteSheet, 0, 0, Constants.PLAYER_W, Constants.PLAYER_H, 0, 0, Constants.PLAYER_W, Constants.PLAYER_H);\n                }\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (user.dx != 0) {\n                    user.frame = Math.floor(user.tick / 5) % 4;\n                    ctx.drawImage(this.spriteSheet, user.frame * Constants.PLAYER_W, Constants.PLAYER_H, Constants.PLAYER_W, Constants.PLAYER_H, user.x - Camera.x, user.y - Camera.y, Constants.PLAYER_W, Constants.PLAYER_H);\n                }\n                else {\n                    ctx.drawImage(this.spriteSheet, 0, 0, Constants.PLAYER_W, Constants.PLAYER_H, user.x - Camera.x, user.y - Camera.y, Constants.PLAYER_W, Constants.PLAYER_H);\n                }\n            }\n            for (const player of this.state.nonUserStates) {\n                ctx.fillRect(player.x - Camera.x, player.y - Camera.y, Constants.PLAYER_W, Constants.PLAYER_H);\n            }\n            if (this.deathAnimFrame >= 5) {\n                this.deathAnimFrame--;\n                ctx.fillStyle = 'rgb(0, 0, 0)';\n                ctx.fillRect(0, 0, Constants.W, Constants.H);\n            }\n            else if (this.deathAnimFrame > 0) {\n                this.deathAnimFrame--;\n                ctx.fillStyle = 'rgb(255, 255, 255)';\n                ctx.fillRect(0, 0, Constants.W, Constants.H);\n            }\n        };\n        const Key = {\n            _pressed: {},\n            LEFT: 37,\n            UP: 38,\n            RIGHT: 39,\n            DOWN: 40,\n            isDown: function (keyCode) {\n                return this._pressed[keyCode];\n            },\n            onKeydown: function (event) {\n                this._pressed[event.keyCode] = true;\n            },\n            onKeyup: function (event) {\n                delete this._pressed[event.keyCode];\n            }\n        };\n        window.addEventListener('keyup', function (event) {\n            Key.onKeyup(event);\n        }, false);\n        window.addEventListener('keydown', function (event) {\n            Key.onKeydown(event);\n        }, false);\n        const check_bounds = (user) => {\n            if (user.x < 0)\n                user.x = 0;\n            if (user.x > Constants.LEVEL_W - Constants.PLAYER_W)\n                user.x = Constants.LEVEL_W - Constants.PLAYER_W;\n            if (user.y < 0)\n                user.y = 0;\n            if (user.y > Constants.LEVEL_H - Constants.PLAYER_H) {\n                user.dy = 0;\n                user.y = Constants.LEVEL_H - Constants.PLAYER_H;\n                user.can_jump = true;\n            }\n        };\n        const update = () => {\n            const jump_v = 12;\n            const v = 4;\n            const gs = this.state;\n            const user = gs.userState;\n            user.tick += 1;\n            if (Key.isDown(Key.UP) && user.can_jump) {\n                user.dy = -jump_v;\n                user.can_jump = false;\n            }\n            if (Key.isDown(Key.LEFT)) {\n                user.dx += (-v - user.dx) * 0.2;\n                user.x_dir = -1;\n            }\n            else if (Key.isDown(Key.RIGHT)) {\n                user.dx += (v - user.dx) * 0.2;\n                user.x_dir = 1;\n            }\n            else {\n                user.dx *= 0.98;\n                if (Math.abs(user.dx) < 1) {\n                    user.dx = 0;\n                }\n            }\n            collisions();\n            user.dy += 0.7;\n            check_bounds(user);\n            Camera.update(user);\n        };\n        const push = () => {\n            roomChan.push(\"update_pos\", {\n                x: this.state.userState.x,\n                y: this.state.userState.y,\n                user_id: this.user_id\n            });\n        };\n        setInterval(() => {\n            update();\n            draw();\n            push();\n        }, 1000 / this.state.fps);\n    }\n}\nclass App {\n    static init() {\n        this.socket = new phoenix_1.Socket(\"/socket\", {});\n        this.socket.connect();\n        this.roomChan = this.socket.channel(\"rooms:lobby\", {});\n        this.roomChan.join().receive(\"ignore\", () => console.log(\"auth error\"))\n            .receive(\"ok\", () => { console.log(\"join ok\"); });\n        this.roomChan.onError(e => console.log(\"something went wrong\", e));\n    }\n    static run() {\n        this.init();\n        // chan.onClose(e => console.log(\"channel closed\", e))\n        this.game = new Game();\n        const game = this.game;\n        const c = game.canvas;\n        const sheet = game.spriteSheet;\n        const gs = game.state;\n        // Start the game loop\n        game.run(this.roomChan);\n        this.roomChan.on(\"update_pos\", (msg) => {\n            if (msg.user_id === this.game.user_id) {\n                return;\n            }\n            const changedPlayer = this.game.state.playerStates.filter(x => x.id === msg.user_id);\n            if (changedPlayer.length === 1) {\n                changedPlayer[0].x = msg.x;\n                changedPlayer[0].y = msg.y;\n            }\n            else {\n                this.game.state.playerStates.push(new PlayerState(msg.x, msg.y, msg.user_id));\n            }\n        });\n        this.roomChan.on(\"remove_player\", (data) => {\n            const player_idx = this.game.state.playerStates.findIndex((x) => x.id === data.user_id);\n            this.game.state.playerStates.splice(player_idx, 1);\n        });\n        this.roomChan.on(\"world_data\", (data) => {\n            for (const player of data.players) {\n                this.game.level.collidables.push(new PlayerBlock(player.x, player.y));\n            }\n        });\n    }\n}\nApp.run();\nexports.default = App;\n//# sourceMappingURL=app.js.map"]}