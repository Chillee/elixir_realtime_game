{"version":3,"sources":["node_modules/phoenix/priv/static/phoenix.js","web/static/js/app.js","web/static/js/app.ts"],"names":["Object","defineProperty","exports","value","phoenix_1","require","App","user_id","Math","floor","random","socket","Socket","params","id","connect","chan","channel","join","receive","console","log","onError","e","c","document","getElementById","ctx","getContext","sheet","Image","src","Key","_pressed","LEFT","UP","RIGHT","DOWN","isDown","keyCode","onKeydown","event","onKeyup","window","addEventListener","can_jump","x","y","xx","yy","x_dir","tick","frame","dx","dy","fps","run","update","draw","push","setInterval","jump_v","v","collisions","colliding","fillStyle","fillRect","translate","scale","drawImage","setTransform","user","on","msg","init","default"],"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","file":"priv/static/js/app.js","sourcesContent":["\nrequire.register(\"phoenix/priv/static/phoenix.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"phoenix\");\n  (function() {\n    (function(exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are multiplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"room:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n// ## Duplicate Join Subscriptions\n//\n// While the client may join any number of topics on any number of channels,\n// the client may only hold a single subscription for each unique topic at any\n// given time. When attempting to create a duplicate subscription,\n// the server will close the existing channel, log a warning, and\n// spawn a new channel for the topic. The client will have their\n// `channel.onClose` callbacks fired for the existing channel, and the new\n// channel join will have its receive hooks processed as normal.\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attempted\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n//\n// ## Presence\n//\n// The `Presence` object provides features for syncing presence information\n// from the server with the client and handling presences joining and leaving.\n//\n// ### Syncing initial state from the server\n//\n// `Presence.syncState` is used to sync the list of presences on the server\n// with the client's state. An optional `onJoin` and `onLeave` callback can\n// be provided to react to changes in the client's local presences across\n// disconnects and reconnects with the server.\n//\n// `Presence.syncDiff` is used to sync a diff of presence join and leave\n// events from the server, as they happen. Like `syncState`, `syncDiff`\n// accepts optional `onJoin` and `onLeave` callbacks to react to a user\n// joining or leaving from a device.\n//\n// ### Listing Presences\n//\n// `Presence.list` is used to return a list of presence information\n// based on the local state of metadata. By default, all presence\n// metadata is returned, but a `listBy` function can be supplied to\n// allow the client to select which metadata to use for a given presence.\n// For example, you may have a user online from different devices with a\n// a metadata status of \"online\", but they have set themselves to \"away\"\n// on another device. In this case, they app may choose to use the \"away\"\n// status for what appears on the UI. The example below defines a `listBy`\n// function which prioritizes the first metadata which was registered for\n// each user. This could be the first tab they opened, or the first device\n// they came online from:\n//\n//     let state = {}\n//     state = Presence.syncState(state, stateFromServer)\n//     let listBy = (id, {metas: [first, ...rest]}) => {\n//       first.count = rest.length + 1 // count of this user's presences\n//       first.id = id\n//       return first\n//     }\n//     let onlineUsers = Presence.list(state, listBy)\n//\n//\n// ### Example Usage\n//\n//     // detect if user has joined for the 1st time or from another tab/device\n//     let onJoin = (id, current, newPres) => {\n//       if(!current){\n//         console.log(\"user has entered for the first time\", newPres)\n//       } else {\n//         console.log(\"user additional presence\", newPres)\n//       }\n//     }\n//     // detect if user has left from all tabs/devices, or is still present\n//     let onLeave = (id, current, leftPres) => {\n//       if(current.metas.length === 0){\n//         console.log(\"user has left from all devices\", leftPres)\n//       } else {\n//         console.log(\"user left from a device\", leftPres)\n//       }\n//     }\n//     let presences = {} // client's initial empty presence state\n//     // receive initial presence data from server, sent after join\n//     myChannel.on(\"presences\", state => {\n//       presences = Presence.syncState(presences, state, onJoin, onLeave)\n//       displayUsers(Presence.list(presences))\n//     })\n//     // receive \"presence_diff\" from server, containing join/leave events\n//     myChannel.on(\"presence_diff\", diff => {\n//       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n//       this.setState({users: Presence.list(room.presences, listBy)})\n//     })\n//\nvar VSN = \"1.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\nvar Push = function () {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status;\n      var response = _ref.response;\n      var ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n    //\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\", _this3.joinRef());\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n    // before dispatching to the channel callbacks.\n    //\n    // Must return the payload, modified or unmodified\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref) {\n      var close = CHANNEL_EVENTS.close;\n      var error = CHANNEL_EVENTS.error;\n      var leave = CHANNEL_EVENTS.leave;\n      var join = CHANNEL_EVENTS.join;\n\n      if (ref && [close, error, leave, join].indexOf(event) >= 0 && ref !== this.joinRef()) {\n        return;\n      }\n      var handledPayload = this.onMessage(event, payload, ref);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Socket = exports.Socket = function () {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n\n  function Socket(endPoint) {\n    var _this4 = this;\n\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this5 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this6 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this7 = this;\n\n      var topic = data.topic;\n      var event = data.event;\n      var payload = data.payload;\n      var ref = data.ref;\n\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef() });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic;\n      var event = msg.event;\n      var payload = msg.payload;\n      var ref = msg.ref;\n\n      this.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this8 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status;\n          var token = resp.token;\n          var messages = resp.messages;\n\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({ data: JSON.stringify(msg) });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this9 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      return resp && resp !== \"\" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this12 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        (function () {\n          var newRefs = newPresence.metas.map(function (m) {\n            return m.phx_ref;\n          });\n          var curRefs = currentPresence.metas.map(function (m) {\n            return m.phx_ref;\n          });\n          var joinedMetas = newPresence.metas.filter(function (m) {\n            return curRefs.indexOf(m.phx_ref) < 0;\n          });\n          var leftMetas = currentPresence.metas.filter(function (m) {\n            return newRefs.indexOf(m.phx_ref) < 0;\n          });\n          if (joinedMetas.length > 0) {\n            joins[key] = newPresence;\n            joins[key].metas = joinedMetas;\n          }\n          if (leftMetas.length > 0) {\n            leaves[key] = _this12.clone(currentPresence);\n            leaves[key].metas = leftMetas;\n          }\n        })();\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins;\n    var leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this13 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this13.tries = _this13.tries + 1;\n        _this13.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n})(typeof(exports) === \"undefined\" ? window.Phoenix = window.Phoenix || {} : exports);\n  })();\n});","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst phoenix_1 = require(\"phoenix\");\nclass App {\n    static init() {\n        const user_id = Math.floor(Math.random() * 10000);\n        let socket = new phoenix_1.Socket(\"/socket\", {\n            params: { id: user_id }\n        });\n        socket.connect();\n        const chan = socket.channel(\"rooms:lobby\", {});\n        chan.join().receive(\"ignore\", () => console.log(\"auth error\"))\n            .receive(\"ok\", () => { console.log(\"join ok\"); });\n        chan.onError(e => console.log(\"something went wrong\", e));\n        // chan.onClose(e => console.log(\"channel closed\", e))\n        const c = document.getElementById(\"gameCanvas\");\n        const ctx = c.getContext(\"2d\");\n        const sheet = new Image();\n        sheet.src = \"images/sheet.png\";\n        const Key = {\n            _pressed: {},\n            LEFT: 37,\n            UP: 38,\n            RIGHT: 39,\n            DOWN: 40,\n            isDown: function (keyCode) {\n                return this._pressed[keyCode];\n            },\n            onKeydown: function (event) {\n                this._pressed[event.keyCode] = true;\n            },\n            onKeyup: function (event) {\n                delete this._pressed[event.keyCode];\n            }\n        };\n        window.addEventListener('keyup', function (event) {\n            Key.onKeyup(event);\n        }, false);\n        window.addEventListener('keydown', function (event) {\n            Key.onKeydown(event);\n        }, false);\n        let can_jump = false;\n        let x = 0, y = 0, xx = 0, yy = 0;\n        let x_dir = 1;\n        let tick = 0;\n        let frame = 0;\n        let dx = 0, dy = 0;\n        const fps = 60;\n        function run() {\n            update();\n            draw();\n            push();\n        }\n        ;\n        // Start the game loop\n        setInterval(run, 1000 / fps);\n        const jump_v = 12;\n        const v = 4;\n        const update = () => {\n            tick += 1;\n            dx = 0;\n            if (Key.isDown(Key.UP) && can_jump) {\n                dy = -jump_v;\n                can_jump = false;\n            }\n            if (Key.isDown(Key.LEFT)) {\n                dx = -v;\n                x_dir = -1;\n            }\n            if (Key.isDown(Key.RIGHT)) {\n                dx = v;\n                x_dir = 1;\n            }\n            collisions();\n            dy += 0.7;\n            if (y > 480 - 32) {\n                dy = 0;\n                y = 480 - 32;\n                can_jump = true;\n            }\n        };\n        function colliding() {\n            if (x >= xx + 32 || x + 32 <= xx)\n                return false;\n            if (y >= yy + 32 || y + 32 <= yy)\n                return false;\n            return true;\n        }\n        function collisions() {\n            y += dy;\n            if (colliding()) {\n                y -= dy;\n                if (!colliding()) {\n                    y += dy;\n                    if (dy > 0) {\n                        dy = 0;\n                        can_jump = true;\n                        y = yy - 32;\n                    }\n                    else {\n                        y = yy + 32;\n                    }\n                }\n                else {\n                    y += dy;\n                }\n            }\n            x += dx;\n        }\n        function draw() {\n            ctx.fillStyle = 'rgb(255, 255, 255)';\n            ctx.fillRect(0, 0, 640, 480);\n            ctx.fillStyle = 'rgb(0, 0, 0)';\n            if (x_dir == -1) {\n                ctx.translate(x + 32, y);\n                ctx.scale(-1, 1);\n                if (dx != 0) {\n                    frame = Math.floor(tick / 5) % 4;\n                    ctx.drawImage(sheet, frame * 32, 32, 32, 32, 0, 0, 32, 32);\n                }\n                else {\n                    ctx.drawImage(sheet, 0, 0, 32, 32, 0, 0, 32, 32);\n                }\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (dx != 0) {\n                    frame = Math.floor(tick / 5) % 4;\n                    ctx.drawImage(sheet, frame * 32, 32, 32, 32, x, y, 32, 32);\n                }\n                else {\n                    ctx.drawImage(sheet, 0, 0, 32, 32, x, y, 32, 32);\n                }\n            }\n            ctx.fillRect(xx, yy, 32, 32);\n        }\n        function push() {\n            chan.push(\"new:msg\", {\n                user: '1',\n                x: x,\n                y: y,\n                user_id: user_id\n            });\n        }\n        chan.on(\"new:msg\", msg => {\n            if (msg.user_id !== user_id) {\n                xx = msg.x;\n                yy = msg.y;\n            }\n        });\n    }\n}\nApp.init();\nexports.default = App;\n//# sourceMappingURL=app.js.map","\"use strict\";\nimport {\n  Socket\n} from \"phoenix\"\n\nclass App {\n\n  public static init() {\n    const user_id = Math.floor(Math.random()*10000);\n    let socket = new Socket(\"/socket\", {\n      params: {id: user_id}\n    })\n\n    socket.connect();\n\n    const chan = socket.channel(\"rooms:lobby\", {})\n    chan.join().receive(\"ignore\", () => console.log(\"auth error\"))\n               .receive(\"ok\", () => {console.log(\"join ok\")})\n    chan.onError(e => console.log(\"something went wrong\", e))\n    // chan.onClose(e => console.log(\"channel closed\", e))\n\n    const c = <HTMLCanvasElement>document.getElementById(\"gameCanvas\");\n    const ctx = c.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    const sheet = new Image();\n    sheet.src = \"images/sheet.png\";\n\n    const Key = {\n      _pressed: {},\n\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      DOWN: 40,\n\n      isDown: function (keyCode: number) {\n        return this._pressed[keyCode];\n      },\n\n      onKeydown: function (event: KeyboardEvent) {\n        this._pressed[event.keyCode] = true;\n      },\n\n      onKeyup: function (event: KeyboardEvent) {\n        delete this._pressed[event.keyCode];\n      }\n    };\n\n    window.addEventListener('keyup', function (event) {\n      Key.onKeyup(event);\n    }, false);\n    window.addEventListener('keydown', function (event) {\n      Key.onKeydown(event);\n    }, false);\n\n    let can_jump = false;\n    let x = 0, y = 0, xx = 0, yy = 0;\n    let x_dir = 1;\n    let tick = 0;\n    let frame = 0;\n    let dx = 0, dy = 0;\n    const fps = 60;\n\n    function run() {\n      update();\n      draw();\n      push();\n    };\n\n    // Start the game loop\n    setInterval(run, 1000 / fps);\n\n    const jump_v = 12;\n    const v = 4;\n\n    const update = () => {\n      tick += 1;\n      dx = 0;\n      if (Key.isDown(Key.UP) && can_jump) {\n        dy = -jump_v;\n        can_jump = false;\n      }\n      if (Key.isDown(Key.LEFT)) {\n        dx = -v;\n        x_dir = -1;\n      }\n      if (Key.isDown(Key.RIGHT)) {\n        dx = v;\n        x_dir = 1;\n      }\n      collisions();\n      dy += 0.7;\n\n      if (y > 480 - 32) {\n        dy = 0;\n        y = 480 - 32;\n        can_jump = true;\n      }\n    }\n\n    function colliding() {\n      if (x >= xx + 32 || x + 32 <= xx) return false;\n      if (y >= yy + 32 || y + 32 <= yy) return false;\n      return true;\n    }\n\n    function collisions() {\n      y += dy;\n      if (colliding()) {\n        y -= dy;\n        if (!colliding()) {\n          y += dy;\n          if (dy > 0) {\n            dy = 0;\n            can_jump = true;\n            y = yy - 32;\n          }\n          else {\n            y = yy + 32;\n          }\n        }\n        else {\n          y += dy;\n        }\n      }\n      x += dx;\n    }\n\n    function draw() {\n      ctx.fillStyle = 'rgb(255, 255, 255)';\n      ctx.fillRect(0, 0, 640, 480);\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      if (x_dir == -1) {\n        ctx.translate(x + 32, y);\n        ctx.scale(-1, 1);\n        if (dx != 0) {\n          frame = Math.floor(tick / 5) % 4;\n          ctx.drawImage(sheet, frame * 32, 32, 32, 32, 0, 0, 32, 32);\n        }\n        else {\n          ctx.drawImage(sheet, 0, 0, 32, 32, 0, 0, 32, 32);\n        }\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n      }\n      else {\n        if (dx != 0) {\n          frame = Math.floor(tick / 5) % 4;\n          ctx.drawImage(sheet, frame * 32, 32, 32, 32, x, y, 32, 32);\n        }\n        else {\n          ctx.drawImage(sheet, 0, 0, 32, 32, x, y, 32, 32);\n        }\n      }\n      ctx.fillRect(xx, yy, 32, 32);\n    }\n\n    function push() {\n      chan.push(\"new:msg\", {\n        user: '1',\n        x: x,\n        y: y,\n        user_id: user_id\n      })\n    }\n\n    chan.on(\"new:msg\", msg => {\n      if (msg.user_id !== user_id) {\n        xx = msg.x;\n        yy = msg.y;\n      }\n    })\n  }\n\n}\n\nApp.init();\n\nexport default App"]}